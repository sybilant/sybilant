;; -*- mode: clojure -*-
(defimport exit)

(defdata data #int8 0 #int8 0)
(defdata foo "â˜ƒ\0")

(defasm ^:export _start
  (%mov %dil (%mem8 data))
  (%mov %rcx 0)
  (%cmp (%mem8 %rcx foo) #int8 -30)
  (%je next)
  (%mov %dil 1)
  (%jmp exit)
  (%label next)
  (%inc %rcx)
  (%cmp (%mem8 %rcx foo) #int8 -104)
  (%je next2)
  (%mov %dil 1)
  (%jmp exit)
  (%label next2)
  (%inc %rcx)
  (%cmp (%mem8 %rcx foo) #int8 -125)
  (%je next3)
  (%mov %dil 1)
  (%jmp exit)
  (%label next3)
  (%inc %rcx)
  (%cmp (%mem8 %rcx foo) #int8 0)
  (%je next4)
  (%mov %dil 1)
  (%label next4)
  (%jmp exit))
